---
import * as cn from 'classnames'
import type { Root, ApiEndpoint } from '../../util/api-type'
import { Schema } from '../../util/api'

const paths = Object.keys(Schema.paths) as unknown as [keyof Root['paths']]

const pathMap = new Map()
const methodMap = new Map()
//for (const [key, value] of map) { // Using the default iterator (could be `map.entries()` instead)
//  console.log(`The value for key ${key} is ${value}`);
//}
paths.forEach(path => {
  // the groups coming from the first part of the route
  const group = path.split('/')[1]

  // the key is the path
  const key = path

  const methods = Object.keys(Schema.paths[path])

  methods.forEach(method => {
    const properties = Schema.paths[path][method]

    if (!pathMap.has(path)) {
      pathMap.set(`${path}-${method}`, {
        group: group,
        route: path,
        method: method,
        properties: properties,
        // value: value,
      })
    }
  })
})
console.log('pathMap', pathMap)
---

<div>
  {
    paths.map(path => {
      const group = path.split('/')[1]
      const key = path
      // this return the methods like get, post, put, delete
      const methods = Object.keys(Schema.paths[path])

      return (
        <div class="api-card">
          {methods.map(method => {
            const properties = Schema.paths[path][method]
            const responses = Schema.paths[path][method].responses
            return (
              <div>
                <div class="api-header">
                  <div class="method">{method}</div>

                  <div class="route">{path}</div>
                </div>
                <div>
                  {Object.keys(properties).map(property => {
                    const value = Object.values(properties[property])
                    console.log('value', value)
                    return (
                      <div>
                        <h6>{property}</h6>
                        <div>{value}</div>
                      </div>
                    )
                  })}
                </div>
              </div>
            )
          })}
        </div>
      )
    })
  }
</div>
