---
import ApiPropertyCardTitle from './ApiPropertyCardTitle.astro'
import { Sample } from '../../util/sample'
interface Props {
  value: any
  Schema?: any
  property: string
}

const { value, property, Schema }: Props = Astro.props

const isCodeTwoHundre = value['200']
const isCodeTwoHundreOne = value['201']
const isCodeTwoHundreFour = value['204']

const schema = (position: string) => {
  const schemaValue = Object.entries(Schema['components']['schemas'][position])

  console.log('schemaValue', schemaValue)
}

// recursively look for "ref" in an object and look get its value, if none return null

Object.entries(Sample)
const stringSchema = Object.entries(Object.values(Sample)).map(item => {
  const response = Object.values(item[1]).map(data => {
    console.log('data', data, 'typeof data', typeof data)
    const isContentExists = Object.keys(data['responses']).map(code => {
      return Object.values(data['responses'][code])[0]['application/json']
        ? true
        : Object.values(data['responses'][code])[0]['*/*']
          ? true
          : false
    })
    console.log('isContentExists', isContentExists)
  })
})

console.log('stringSchema', stringSchema)
---

<>
  <ApiPropertyCardTitle property={property} />
  <div class="value">
    {
      value ? (
        <div class="children-body">
          <pre>{JSON.stringify(value, null, 2)}</pre>
        </div>
      ) : (
        'null'
      )
    }
  </div>
</>
