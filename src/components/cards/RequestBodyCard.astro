---
import type { Root } from 'src/util/api-type'
import ApiPropertyCardTitle from './ApiPropertyCardTitle.astro'
import type { paths } from 'src/util/generated-types'
import { transformRequest } from 'src/util/fetch'
interface Props {
  property: string
  value: any
  schema: Root
  route: keyof paths
  method: string
}
const { property, value, method, route, schema } = Astro.props

const result = transformRequest(route, method)
---

{
  property && (
    <>
      <div class="flex">
        {' '}
        <ApiPropertyCardTitle property={property} />
        {value.required ? (
          <span class="required">*required</span>
        ) : (
          <span class="optional">optional</span>
        )}
      </div>

      <p>Media Type: {result.mediaType}</p>
      <code>Schema:</code>
      <div class="children-body">
        {' '}
        <pre>{JSON.stringify(result.examples, null, 2)}</pre>
      </div>
    </>
  )
}
